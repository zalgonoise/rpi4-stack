version: "3.7"
services:

    git:
        image: gogs/gogs-git
        container_name: git
        networks:
            - netstack
        restart: unless-stopped
        volumes:
          - /data/git:/data
          - /etc/timezone:/etc/timezone:ro
          - /etc/localtime:/etc/localtime:ro
        ports:
          - 3000:3000
          - 2222:22

    nextcloud:
        image: linuxserver/nextcloud
        container_name: nextcloud
        environment:
            - PUID=${UID:-1000}
            - PGID=${GID:-1000}
            - TZ=Europe/Madrid
        networks:
            - netstack
        volumes:
            - /code/nc-config:/config
            - /data:/mount-points/data:rw
        ports:
            - 9443:443
        restart: unless-stopped

    code-server:
        image: ghcr.io/linuxserver/code-server
        container_name: code-server
        environment:
            - PUID=${UID:-1000}
            - PGID=${GID:-1000}
            - TZ=Europe/Madrid
        env_file:
            - secrets/code-server.env
        networks:
            - netstack
        volumes:
            - /code/cs-config:/config
            - /git:/git
            - /code:/code
        ports:
            - 8443:8443
        restart: unless-stopped

    qbittorrent:
        image: ghcr.io/linuxserver/qbittorrent
        container_name: qbittorrent
        environment:
            - PUID=${UID:-1000}
            - PGID=${GID:-1000}
            - TZ=Europe/Madrid
            - UMASK_SET=022
            - WEBUI_PORT=8080
        volumes:
            - /code/qb-config:/config
            - /data/dl:/downloads
        ports:
            - 6881:6881
            - 6881:6881/udp
            - 8080:8080
        networks:
            - netstack
        restart: unless-stopped

    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        command: -H unix:///var/run/docker.sock
        environment:
            - VIRTUAL_HOST=docker.dome
            - VIRTUAL_PORT=9000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /code/prt-config:/data
        ports:
            - 9000:9000
        networks:
            - netstack
        restart: unless-stopped

    plex:
        image: linuxserver/plex
        container_name: plex
        devices:
            - /dev/dri:/dev/dri
        ports:
            - "32400:32400"
            - "1900:1900/udp"
            - "3005:3005"
            - "5353:5353/udp"
            - "8324:8324"
            - "32410:32410/udp"
            - "32412:32412/udp"
            - "32413:32413/udp"
            - "32414:32414/udp"
            - "32469:32469"
        environment:
            - PUID=${UID:-1000}
            - PGID=${GID:-1000}
            - VERSION=docker
            - ADVERTISE_IP=https://plex.dome:443/
        networks:
            - netstack
        env_file:
            - secrets/plex.env
        volumes:
            - /code/plex-config:/config
            - /data/movies:/media/movies:ro
            - /data/shows:/media/shows:ro
        restart: unless-stopped


    web:
        image: nginx:latest
        container_name: "web"
        hostname: "web"
        ports:
            - "80:80"
            - "443:443"
        restart: always
        networks:
            - netstack
        volumes:
            - ./proxy:/etc/nginx/conf.d
            - ./ssl:/etc/nginx/ssl
        depends_on:
            - code-server
            - nextcloud
            - qbittorrent
            - portainer
            - plex
            - git


    vpn-tun0:
        build:
            context: ./vpn-bridge
            dockerfile: ./Dockerfile
            args:
                - tun=tun0/
        container_name: "vpn-tun0"
        privileged: true
        restart: always
        stdin_open: true
        networks:
            - nettun

    vpn-tun1:
        build:
            context: ./vpn-bridge
            dockerfile: ./Dockerfile
            args:
                - tun=tun1/
        container_name: "vpn-tun1"
        privileged: true
        restart: always
        stdin_open: true
        networks:
            - nettun


networks:
    netstack:
        driver: "bridge"
    nettun:
        driver: "host"

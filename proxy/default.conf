# Upstreams

upstream git {
    server git:3000;
}

upstream code-server {
    server code-server:8443;
}

upstream nextcloud {
    server nextcloud:443;
}

upstream qbittorrent {
    server qbittorrent:8080;
}

upstream portainer {
    server portainer:9000;
}

upstream plex {
    server plex:32400;
}

upstream pihole {
    server 192.168.0.2:11080; # Replace with RPi's 
                              # local network IP address
                              # since it is in host driver mode
                              #
                              # remember to update your router's
                              # DNS address to the same IP
}

# Port 80 redirects

server {
    listen 80;
    server_name git.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name code.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name cloud.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name dl.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name docker.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name plex.localhost;

    return 301 https://$server_name$request_uri;
}


server {
    listen 80;
    server_name dns.localhost;

    return 301 https://$server_name$request_uri;
}


server {
    listen 80;
    server_name localhost;

    return 301 https://$server_name$request_uri;
}


# Custom DNS Port 80 redirects

server {
    listen 80;
    server_name git.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name code.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name cloud.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name dl.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name docker.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name plex.dome;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name dns.dome;

    return 301 https://$server_name$request_uri;
}

# Multi-server-name Proxy

server {
    listen                  443 ssl;
    server_name             git.localhost,
                            git.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://git$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             code.localhost,
                            code.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://code-server$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             cloud.localhost,
                            cloud.dome;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          https://nextcloud$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             dl.localhost,
                            dl.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://qbittorrent$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             docker.localhost,
                            docker.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://portainer$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             plex.localhost,
                            plex.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://plex$request_uri;
    }
}

server {
    listen                  443 ssl;
    server_name             dns.localhost,
                            dns.dome;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded_For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded_Proto   $scheme;
        proxy_pass          http://pihole/admin$request_uri;
    }
}